server:
  port: 9708

logging:
  config: classpath:log4j2.yml   # 配置log4j2读取的配置文件
  file: ../springlogs/gateway.log

spring:
  profiles:
    active: "@profileActive@"
  application:
    name: Gateway
  cloud:
    nacos:
      discovery:
        server-addr: ${nacosserver.ip}:${nacosserver.port}
    sentinel:
      transport:
        dashboard: ${sentinelserver.ip}:${sentinelserver.port}
    gateway:
      discovery:
        locator:
          # 让gateway通过服务发现组件找到其他的微服务
          enabled: true
      httpclient:
        ssl:
          useInsecureTrustManager: true
      open-path:
        paths: /AuthService/oauth/token,/AuthService/oauth/authorize
      routes:
      # 采用自定义路由 ID（有固定用法，不同的 id 有不同的功能，详见：https://cloud.spring.io/spring-cloud-gateway/2.0.x/single/spring-cloud-gateway.html#gateway-route-filters）
      - id: NACOS-CONSUMER
        # 采用 LoadBalanceClient 方式请求，以 lb:// 开头，后面的是注册在 Nacos 上的服务名
        # http://127.0.0.1:9000/nacos-consumer/c/app
        uri: lb://nacos-consumer
        # Predicate 翻译过来是“谓词”的意思，必须，主要作用是匹配用户的请求，有很多种用法
        predicates:
        # Method 方法谓词，这里是匹配 GET 和 POST 请求
        #http://127.0.0.1:9000/nacos-consumer-feign/c/hi
        - Path=/nacos-consumer/**
        - Method=GET,POST
      - id: NACOS-CONSUMER-FEIGN
        uri: lb://nacos-consumer-feign
        predicates:
        - Path=/nacos-consumer-feign/**
        - Method=GET,POST

      - id: NACOS-PROVIDER
        uri: lb://nacos-provider
        predicates:
        - Path=/nacos-provider/**
        - Method=GET,POST
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
  redis:
    database: 3
    host: ${custom.nosql.redis.host}
    port: ${custom.nosql.redis.port}
    jedis:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 1
  rabbitmq:
    addresses: ${custom.nosql.rabbitmq.addresses}
    port: ${custom.nosql.rabbitmq.port}
    username: ${custom.nosql.rabbitmq.username}
    password: ${custom.nosql.rabbitmq.password}
    virtualHost: /
    requestedHeartbeat: 7200
    queues:
    - name: logger.persistence
      exchange-name: topic.exchange
      bind-name: logger.persistence
    template:
     replyTimeout: 500000
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
  http:
    encoding:
      charset: UTF-8
      enabled: true
      force: true
  zipkin:
    base-url: http://localhost:9411
  sleuth:
    sampler:
      probability: 1.0

management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
      health:
        show-details: ALWAYS

ribbon:
  ReadTimeout: 60000
  ConnectTimeout: 60000


